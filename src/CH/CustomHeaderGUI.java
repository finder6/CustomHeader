package CH;
import burp.*;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
/**
 *
 * @author reincarnate
 */
public class CustomHeaderGUI extends javax.swing.JPanel {
    private final IBurpExtenderCallbacks callbacks;
    private final PrintWriter mStdOut;
    private final IExtensionHelpers helpers;
    private boolean DEBUG;
    private ArrayList<String> ListHeader;
    //public ArrayList<String> ListMethod;
    ArrayList<String> ListMethod=new ArrayList<>();
    
    private void setHeader(ArrayList<String> header){this.ListHeader = header;}
    public ArrayList<String> getHeader(){return this.ListHeader;}
    
    private void setMethod(String method){this.ListMethod.add(method);}
    public ArrayList<String> getMethod(){return this.ListMethod;}
    
    private void setDebug(boolean DEBUG){this.DEBUG = DEBUG;}
    public boolean getDebug(){return this.DEBUG;}
    
    /**
     * initHeader(header)
     * @param header
     * @return 
     */
    public ArrayList initHeader(String header ){
        String[] values = header.split("\n");
        ArrayList<String> listHeader=new ArrayList<>();
        listHeader.addAll(Arrays.asList(values));
        return listHeader;
    }
    
    /**
     * Creates new form CustomHeaderGUI
     * @param parent
     */
    public CustomHeaderGUI(CustomHeader parent) {
        this.callbacks = CustomHeader.callbacks;
        this.helpers = callbacks.getHelpers();
        mStdOut = new PrintWriter(callbacks.getStdout(), true);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("RESET");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("SAVE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Header: Separate by new line [ENTER]");

        jCheckBox1.setText("Debug");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("ALL METHOD");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("GET");
        jCheckBox3.setToolTipText("");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox4.setText("POST");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jCheckBox5.setText("PUT");
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jCheckBox6.setText("DELETE");
        jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox6ActionPerformed(evt);
            }
        });

        jCheckBox7.setText("TRACE");
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });

        jCheckBox8.setText("PATCH");
        jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox8ActionPerformed(evt);
            }
        });

        jCheckBox9.setText("HEAD");
        jCheckBox9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBox3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBox2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox5)
                    .addComponent(jCheckBox6)
                    .addComponent(jCheckBox7)
                    .addComponent(jCheckBox8)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox9)
                    .addComponent(jCheckBox2))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jLabel2))
                .addContainerGap(84, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
    if(jCheckBox5.isSelected()){
            setMethod("PUT");
            if (getDebug() == true) mStdOut.println("[+] Method : " + getMethod().toString());
            jLabel2.setText("PUT Method enabled !");
        }else{
            ListMethod.removeIf(x -> x.equals("PUT"));
            if (getDebug() == true) mStdOut.println("[+] Method : " + getMethod().toString());
            jLabel2.setText("PUT Method disabled !");
        }
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTextArea1.setText("");
        setDebug(false);
        jCheckBox1.setSelected(false);
        jCheckBox2.setSelected(false);
        jCheckBox3.setSelected(false);
        jCheckBox4.setSelected(false);
        jCheckBox5.setSelected(false);
        jCheckBox6.setSelected(false);
        jCheckBox7.setSelected(false);
        jCheckBox8.setSelected(false);
        jCheckBox9.setSelected(false);
        jCheckBox2.setEnabled(true);
        jCheckBox3.setEnabled(true);
        jCheckBox4.setEnabled(true);
        jCheckBox5.setEnabled(true);
        jCheckBox6.setEnabled(true);
        jCheckBox7.setEnabled(true);
        jCheckBox8.setEnabled(true);
        jCheckBox9.setEnabled(true);
        jLabel2.setText("");
        ListMethod.clear();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ArrayList listHeader = initHeader(jTextArea1.getText());
        this.setHeader(listHeader);
        jLabel2.setText("Save successfully !");
        if (getDebug() == true) mStdOut.println("[+] Custom Header Structure: " + listHeader.toString());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(jCheckBox1.isSelected()){
            setDebug(true);
            jLabel2.setText("Debug mode actived !");
        }else{
            setDebug(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
       if(jCheckBox2.isSelected()){
           jCheckBox3.setSelected(false);
           jCheckBox4.setSelected(false);
           jCheckBox5.setSelected(false);
           jCheckBox6.setSelected(false);
           jCheckBox7.setSelected(false);
           jCheckBox8.setSelected(false);
           jCheckBox9.setSelected(false);
           jCheckBox3.setEnabled(false);
           jCheckBox4.setEnabled(false);
           jCheckBox5.setEnabled(false);
           jCheckBox6.setEnabled(false);
           jCheckBox7.setEnabled(false);
           jCheckBox8.setEnabled(false);
           jCheckBox9.setEnabled(false);
           ListMethod.clear();
           try{
               setMethod("GET");
               setMethod("POST");
               setMethod("PUT");
               setMethod("DELETE");
               setMethod("TRACE");
               setMethod("PATCH");
               setMethod("HEAD");
               if (getDebug() == true) mStdOut.println("[+] METHOD : " + getMethod().toString());
           }catch(Error e){
               if (getDebug() == true) mStdOut.println("[!] ERROR : " + e);
           }
           jLabel2.setText("All Method Enabled !");
       }else{
           jCheckBox3.setEnabled(true);
           jCheckBox4.setEnabled(true);
           jCheckBox5.setEnabled(true);
           jCheckBox6.setEnabled(true);
           jCheckBox7.setEnabled(true);
           jCheckBox8.setEnabled(true);
           jCheckBox9.setEnabled(true);
           try{
               ListMethod.clear();
               if (getDebug() == true) mStdOut.println("[+] METHOD : " + ListMethod.toString());
           }catch(Error e){
               if (getDebug() == true) mStdOut.println("[!] ERROR : " + e);
           }
           jLabel2.setText("All Method disabled !");
       }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if(jCheckBox3.isSelected()){
            setMethod("GET");
            if (getDebug() == true) mStdOut.println("[+] Method : " + getMethod().toString());
            jLabel2.setText("GET Method enabled !");
        }else{
            ListMethod.removeIf(x -> x.equals("GET"));
            if (getDebug() == true) mStdOut.println("[+] Method : " + getMethod().toString());
            jLabel2.setText("GET Method disabled !");
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        if(jCheckBox4.isSelected()){
            setMethod("POST");
            if (getDebug() == true) mStdOut.println("[+] Method : " + getMethod().toString());
            jLabel2.setText("POST Method enabled !");
        }else{
            ListMethod.removeIf(x -> x.equals("POST"));
            if (getDebug() == true) mStdOut.println("[+] Method : " + getMethod().toString());
            jLabel2.setText("POST Method disabled !");
        }
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox6ActionPerformed
        if(jCheckBox6.isSelected()){
            setMethod("DELETE");
            if (getDebug() == true) mStdOut.println("[+] Method : " + getMethod().toString());
            jLabel2.setText("DELETE Method enabled !");
        }else{
            ListMethod.removeIf(x -> x.equals("DELETE"));
            if (getDebug() == true) mStdOut.println("[+] Method : " + getMethod().toString());
            jLabel2.setText("DELETE Method disabled !");
        }
    }//GEN-LAST:event_jCheckBox6ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        if(jCheckBox7.isSelected()){
            setMethod("TRACE");
            if (getDebug() == true) mStdOut.println("[+] Method : " + getMethod().toString());
            jLabel2.setText("TRACE Method enabled !");
        }else{
            ListMethod.removeIf(x -> x.equals("TRACE"));
            if (getDebug() == true) mStdOut.println("[+] Method : " + getMethod().toString());
            jLabel2.setText("TRACE Method disabled !");
        }
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox8ActionPerformed
        if(jCheckBox8.isSelected()){
            setMethod("PATCH");
            if (getDebug() == true) mStdOut.println("[+] Method : " + getMethod().toString());
            jLabel2.setText("PATCH Method enabled !");
        }else{
            ListMethod.removeIf(x -> x.equals("PATCH"));
            if (getDebug() == true) mStdOut.println("[+] Method : " + getMethod().toString());
            jLabel2.setText("PATCH Method disabled !");
        }
    }//GEN-LAST:event_jCheckBox8ActionPerformed

    private void jCheckBox9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox9ActionPerformed
        if(jCheckBox9.isSelected()){
            setMethod("HEAD");
            if (getDebug() == true) mStdOut.println("[+] Method : " + getMethod().toString());
            jLabel2.setText("HEAD Method enabled !");
        }else{
            ListMethod.removeIf(x -> x.equals("HEAD"));
            if (getDebug() == true) mStdOut.println("[+] Method : " + getMethod().toString());
            jLabel2.setText("HEAD Method disabled !");
        }
    }//GEN-LAST:event_jCheckBox9ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
